{
    "docs": [
        {
            "location": "/", 
            "text": "FilmFox Documentation\n\n\nThis page is a stub for the upcoming docs describing the app FilmFox", 
            "title": "Home"
        }, 
        {
            "location": "/#filmfox-documentation", 
            "text": "This page is a stub for the upcoming docs describing the app FilmFox", 
            "title": "FilmFox Documentation"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Deploying FilmFox\n\n\nThis section will get you up and running with deploying the FilmFox\napplication on your local machine. One of the main focuses of FilmFox is to create a simple and down-to-the-point deployment\nroutine. It shouldn't take hours and hours of playing around with config files,\ndependency servers, incompatibilities, etc. to get you to a running state. So let's do this as quick as possible. Read on!\n\n\n\n\nRunning Dependencies with Vagrant\n\n\nFirst thing you'll need is Vagrant (and VirtualBox). Vagrant helps us setup a portable environment so that we can\nset up all the dependency servers we require using a simple script located in the root directory\nof the repository, called 'Vagrantfile'. For more information about Vagrant, please visit https://www.vagrantup.com/.\n\n\nFilmFox was developed using VirtualBox as the underlying Vagrant provider, although you can use VMWare as well, however that has not been formally\ntested (just yet!)\n\n\nTested under:\n\n\n\n\nVirtualBox - Version 5.0.6 r103037\n\nVagrant - Version 1.8.1\n\n\n\n\nStep-by-step\n\n\n\n\nDownload and install VirtualBox v5.0.6 or later @ \nVirtualBox Downloads\n\n\nDownload and install Vagrant @ \nVagrant Downloads\n\n\nNavigate to the root directory of the FilmFox repository and run the following command in Terminal or Command Line:\n\n\n\n\n vagrant up\n\n\n\n\n\n\nAfter vagrant has finished downloading/provisioning the servers needed for the application to run, you can proceed to the next section.\n\n\n\n\n\n\nRunning the application\n\n\nTBD", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#deploying-filmfox", 
            "text": "This section will get you up and running with deploying the FilmFox\napplication on your local machine. One of the main focuses of FilmFox is to create a simple and down-to-the-point deployment\nroutine. It shouldn't take hours and hours of playing around with config files,\ndependency servers, incompatibilities, etc. to get you to a running state. So let's do this as quick as possible. Read on!", 
            "title": "Deploying FilmFox"
        }, 
        {
            "location": "/getting-started/#running-dependencies-with-vagrant", 
            "text": "First thing you'll need is Vagrant (and VirtualBox). Vagrant helps us setup a portable environment so that we can\nset up all the dependency servers we require using a simple script located in the root directory\nof the repository, called 'Vagrantfile'. For more information about Vagrant, please visit https://www.vagrantup.com/.  FilmFox was developed using VirtualBox as the underlying Vagrant provider, although you can use VMWare as well, however that has not been formally\ntested (just yet!)  Tested under:   VirtualBox - Version 5.0.6 r103037 Vagrant - Version 1.8.1", 
            "title": "Running Dependencies with Vagrant"
        }, 
        {
            "location": "/getting-started/#step-by-step", 
            "text": "Download and install VirtualBox v5.0.6 or later @  VirtualBox Downloads  Download and install Vagrant @  Vagrant Downloads  Navigate to the root directory of the FilmFox repository and run the following command in Terminal or Command Line:    vagrant up   After vagrant has finished downloading/provisioning the servers needed for the application to run, you can proceed to the next section.", 
            "title": "Step-by-step"
        }, 
        {
            "location": "/getting-started/#running-the-application", 
            "text": "TBD", 
            "title": "Running the application"
        }, 
        {
            "location": "/tech-stack/", 
            "text": "Tech Stack\n\n\nBuild\n\n\n\n\nSBT 0.13.11\n\n\nVagrant 1.8.1\n\n\n\n\nContainer\n\n\n\n\nSpring Boot 1.3.2\n\n\n\n\nDependency Injection\n\n\n\n\nSpring Framework 4.2.4\n\n\n\n\nData Persistence\n\n\n\n\nApache Cassandra 2.2.5 (Spring Data Cassandra 1.3.4)\n\n\nElasticsearch 2.2.1 (Native Java Client)\n\n\n\n\nFront End\n\n\n\n\nBower\n\n\nAngularJS 1.5.0\n\n\nTwitter Bootstrap 3.3.6", 
            "title": "Tech Stack"
        }, 
        {
            "location": "/tech-stack/#tech-stack", 
            "text": "", 
            "title": "Tech Stack"
        }, 
        {
            "location": "/tech-stack/#build", 
            "text": "SBT 0.13.11  Vagrant 1.8.1", 
            "title": "Build"
        }, 
        {
            "location": "/tech-stack/#container", 
            "text": "Spring Boot 1.3.2", 
            "title": "Container"
        }, 
        {
            "location": "/tech-stack/#dependency-injection", 
            "text": "Spring Framework 4.2.4", 
            "title": "Dependency Injection"
        }, 
        {
            "location": "/tech-stack/#data-persistence", 
            "text": "Apache Cassandra 2.2.5 (Spring Data Cassandra 1.3.4)  Elasticsearch 2.2.1 (Native Java Client)", 
            "title": "Data Persistence"
        }, 
        {
            "location": "/tech-stack/#front-end", 
            "text": "Bower  AngularJS 1.5.0  Twitter Bootstrap 3.3.6", 
            "title": "Front End"
        }
    ]
}